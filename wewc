[1mdiff --git a/Front/stdafx7c.h b/Front/stdafx7c.h[m
[1mdeleted file mode 100644[m
[1mindex 8030ec2..0000000[m
[1m--- a/Front/stdafx7c.h[m
[1m+++ /dev/null[m
[36m@@ -1,107 +0,0 @@[m
[31m-#pragma once[m
[31m-#include <Windows.h>[m
[31m-#include <tchar.h>[m
[31m-#include <array>[m
[31m-#include <msclr\marshal.h>[m
[31m-#include <omp.h>[m
[31m-#include <chrono>[m
[31m-[m
[31m-[m
[31m-double* mainSum = new double(0);[m
[31m-long double* mainArr;[m
[31m-double* arrOfSums;[m
[31m-HANDLE* hThread;[m
[31m-int numOfThreads;[m
[31m-LPDWORD* threadInfo;[m
[31m-[m
[31m-volatile unsigned long ResourseInUse = FALSE;[m
[31m-[m
[31m-struct info {[m
[31m-	int indexOut;[m
[31m-	int startPos;[m
[31m-	int numOfSteps;[m
[31m-};[m
[31m-[m
[31m-/*[m
[31m-* https://learn.microsoft.com/en-us/dotnet/api/system.threading.monitor?view=net-6.0[m
[31m-* The example of monitor usage in C#[m
[31m-*/[m
[31m-class Monitor[m
[31m-{[m
[31m-private:[m
[31m-	HANDLE EventFree;[m
[31m-[m
[31m-public:[m
[31m-	Monitor()[m
[31m-	{[m
[31m-		EventFree = CreateEvent(NULL, TRUE, TRUE, L"MainEvent");[m
[31m-	}[m
[31m-[m
[31m-	~Monitor()[m
[31m-	{[m
[31m-		CloseHandle(EventFree);[m
[31m-	}[m
[31m-[m
[31m-	void Enter(double* obj)[m
[31m-	{[m
[31m-		WaitForSingleObject(EventFree, INFINITY);[m
[31m-		ResetEvent(EventFree);[m
[31m-	}[m
[31m-[m
[31m-	void Exit(double* obj)[m
[31m-	{[m
[31m-		SetEvent(EventFree);[m
[31m-	}[m
[31m-};[m
[31m-[m
[31m-info** datas;[m
[31m-[m
[31m-DWORD WINAPI ThreadFunction(LPVOID param)[m
[31m-{[m
[31m-	//mainSum = (static_cast<double*>(param));[m
[31m-	info* data = reinterpret_cast<info*>(param);[m
[31m-	long double tmpSum = 0.0;[m
[31m-	for (int i = data->startPos; i < data->startPos + data->numOfSteps; i++) {[m
[31m-		tmpSum += mainArr[i];[m
[31m-	}[m
[31m-[m
[31m-	arrOfSums[data->indexOut] = tmpSum;[m
[31m-	//for (long long i = 0; i < 1000000000000000; i++)[m
[31m-	//{[m
[31m-	//	i--;[m
[31m-	//}[m
[31m-	//*mainSum = *data->sum;[m
[31m-[m
[31m-	return 0;[m
[31m-}[m
[31m-[m
[31m-DWORD WINAPI ThreadFunctionInterlock(LPVOID param)[m
[31m-{[m
[31m-	info* data = reinterpret_cast<info*>(param);[m
[31m-	long double tmpSum = 0.0;[m
[31m-	for (int i = data->startPos; i < data->startPos + data->numOfSteps; i++) {[m
[31m-		tmpSum += mainArr[i];[m
[31m-	}[m
[31m-[m
[31m-	while (InterlockedExchange(&ResourseInUse, TRUE) == TRUE)[m
[31m-		System::Threading::Thread::Sleep(0);[m
[31m-[m
[31m-	*mainSum += tmpSum;[m
[31m-	InterlockedExchange(&ResourseInUse, FALSE);[m
[31m-	return 0;[m
[31m-}[m
[31m-[m
[31m-DWORD WINAPI ThreadFunctionMonitor(LPVOID param)[m
[31m-{[m
[31m-	info* data = reinterpret_cast<info*>(param);[m
[31m-	long double tmpSum = 0.0;[m
[31m-	for (int i = data->startPos; i < data->startPos + data->numOfSteps; i++) {[m
[31m-		tmpSum += mainArr[i];[m
[31m-	}[m
[31m-[m
[31m-	Monitor mon;[m
[31m-	mon.Enter(mainSum);[m
[31m-	*mainSum += tmpSum;[m
[31m-	mon.Exit(mainSum);[m
[31m-	return 0;[m
[31m-}[m
\ No newline at end of file[m
